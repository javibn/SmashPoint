@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


<ul class="navbar-nav login overflow-hidden">
@if (SignInManager.IsSignedIn(User))
{
        <li class="nav-item ">
            <a class="nav-link text-black" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hola @Html.GetSessionValue("Username")</a>
    </li>
    <li class="nav-item " id="barraSeparacion">
            <a class="nav-link text-black">/</a>
    </li>
    <li class="nav-item ">
        <form  asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Escaparate", new { area = "" })">
                <button type="submit" class="nav-link border-0 bg-transparent text-black">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item ">
            <a class="nav-link text-black" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
    <li class="nav-item " id="barraSeparacion">
            <a class="nav-link text-black">/</a>
    </li>
    <li class="nav-item">
            <a class="nav-link text-black" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
}
</ul>
